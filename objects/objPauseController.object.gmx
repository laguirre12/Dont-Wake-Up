<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Create Room objects

current = 0;
blink = .09;
eyes[0] = instance_create(300, 300, objSoundEye);
eyes[1] = instance_create(300, 375, objExitEye);
eyes[2] = instance_create(300, 450, objRestartEye);
eyes[3] = instance_create(300, 525, objContinueEye);

for (var i = 0; i &lt; 4; i++) {
    eyes[i].image_index = 2;
    eyes[i].image_speed = 0;
}

eyes[current].image_index = 0;
eyes[current].image_speed = blink;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move through options

var up = keyboard_check_pressed(ord('W'));
var down = keyboard_check_pressed(ord('S'));
var space = keyboard_check_pressed(vk_space);

if (up) {
    eyes[current].image_speed = 0;
    eyes[current].image_index = 2;
    eyes[current].active = false;
    
    current = max(current - 1, 0);
    eyes[current].active = true;
    eyes[current].image_speed = blink;
} else if (down) {
    eyes[current].image_speed = 0;
    eyes[current].image_index = 2;
    eyes[current].active = false;
    
    current = min(current + 1, 3);
    eyes[current].image_speed = blink;
    eyes[current].active = true;
} else if (space) {
    // have the current perform an action.  
    switch (current) {
        case 0: eyes[current].displayOptions = true;
                eyes[current].bg = true; break;
        case 1: game_end(); break;
        case 2: show_debug_message("Restart room"); break;
        case 3: 
                global.pause = false;
                with (objBlock) {
                    phy_active = true;
                }
                
                with (objPlayer) {
                    phy_active = true;
                }
                
                with (objBear) {
                    phy_active = true;
                }
                room_goto(global.currentRoom);
                break;
    }
}

// hide sound options
if (current != 0) {
    eyes[0].displayOptions = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Pause Title Text &amp; keys

draw_set_color(c_black);
draw_set_font(fntPauseTitle);
draw_set_halign(fa_center);

var left = view_xview[0];
var right = left + view_wview[0];
var top = view_yview[0];
var bottom = top + view_hview[0];

draw_text((left + right / 2), 100, "Limbo");

draw_set_font(fntSmallCrayon);
draw_text((left + right) / 2, bottom - 100, "*Use WS to move, "
                                    + "Arrow keys for Sound Menu, and Space to select");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
