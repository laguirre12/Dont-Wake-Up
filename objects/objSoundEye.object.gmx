<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprEye</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize Variables
displayOptions = false;
active = true;
bg = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Change sound effects

// use arrow keys for movement
var up = keyboard_check_pressed(vk_up);
var down = -keyboard_check_pressed(vk_down);
var left = -keyboard_check_pressed(vk_left);
var right = keyboard_check_pressed(vk_right);

var vert = up + down;
var horz = left + right;

// handle assigning bg
if (vert &gt; 0) {
    bg = true;
} else if (vert &lt; 0) {
    bg = false;
}

// handle movement
if (horz &lt; 0 &amp;&amp; bg) {
    global.bgSound = max(0, global.bgSound - 1);
} else if (horz &gt; 0 &amp;&amp; bg) {
    global.bgSound = min(6, global.bgSound + 1);
} else if (horz &lt; 0) {
    global.fxSound = max(0, global.fxSound - 1);
} else if (horz &gt; 0) {
    global.fxSound = min(6, global.fxSound + 1);
}

with (objPlayer) {
    audio_sound_gain(bgDreamSound, global.bgSound / 6.0, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Sound Options

scrDrawPauseText(x, y, "sound", active);

var baseX = 500;
var baseY = 285;
var width = 20;
var height = 25;
var rad = 6;
if (displayOptions) {
    // draw current volume levels
    var i = 0;
    while (i &lt; global.bgSound) {
        draw_circle(baseX + width*i, baseY, rad, false);
        i++;
    }
    
    while (i &lt; 6) {
        draw_circle(baseX + width*i, baseY, rad, true);
        i++;
    }
    
    i = 0;
    while (i &lt; global.fxSound) {
        draw_circle(baseX + width*i, baseY + height, rad, false);
        i++;
    }
    
    while (i &lt; 6) {
        draw_circle(baseX + width*i, baseY + height, rad, true);
        i++;
    }

    i++;
    // draw sub menu text (bg and fx)    
    draw_set_font(fntSmallCrayon);
    if (bg) {
        draw_set_colour(c_black);
        draw_text(baseX + width*i, baseY - height + 10, "bg");
        
        draw_set_colour(c_gray);
        draw_text(baseX + width*i, baseY + 10, "fx");
    } else {
        draw_set_colour(c_gray);
        draw_text(baseX + width*i, baseY - height + 8, "bg");
        
        draw_set_colour(c_black);
        draw_text(baseX + width*i, baseY + 13, "fx");
    }
}

draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
